/*
 * phishingapi
 * Easily and directly scan and block phishing security threats in input.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.46
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudmersivePhishingapiClient);
  }
}(this, function(expect, CloudmersivePhishingapiClient) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('PhishingDetectionAdvancedResponse', function() {
      beforeEach(function() {
        instance = new CloudmersivePhishingapiClient.PhishingDetectionAdvancedResponse();
      });

      it('should create an instance of PhishingDetectionAdvancedResponse', function() {
        // TODO: update the code to test PhishingDetectionAdvancedResponse
        expect(instance).to.be.a(CloudmersivePhishingapiClient.PhishingDetectionAdvancedResponse);
      });

      it('should have the property cleanResult (base name: "CleanResult")', function() {
        // TODO: update the code to test the property cleanResult
        expect(instance).to.have.property('cleanResult');
        // expect(instance.cleanResult).to.be(expectedValueLiteral);
      });

      it('should have the property phishingRiskLevel (base name: "PhishingRiskLevel")', function() {
        // TODO: update the code to test the property phishingRiskLevel
        expect(instance).to.have.property('phishingRiskLevel');
        // expect(instance.phishingRiskLevel).to.be(expectedValueLiteral);
      });

      it('should have the property analysisRationale (base name: "AnalysisRationale")', function() {
        // TODO: update the code to test the property analysisRationale
        expect(instance).to.have.property('analysisRationale');
        // expect(instance.analysisRationale).to.be(expectedValueLiteral);
      });

    });
  });

}));
